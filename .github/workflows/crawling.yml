name: News Data Collection

on:
  schedule:
    # 매일 23시(UTC) 실행
    - cron: '0 23 * * *'
  workflow_dispatch:  # 수동으로 실행할 수 있는 옵션 추가

jobs:
  collect_news_data:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/minkyeong'

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Python 설치
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.6'

      # 3. 현재 러너의 공용 IP 가져오기
      - name: Get the public IP of this runner
        id: get_runner_ip
        run: |
          echo "ip_address=$(curl https://checkip.amazonaws.com)" >> "$GITHUB_OUTPUT"

      # 4. MongoDB Atlas API로 러너의 IP 추가
      - name: Permit the runner to access MongoDB Atlas
        run: |
          curl \
            --data '[{"ipAddress": "${{ steps.get_runner_ip.outputs.ip_address }}", "comment": "Temporary GitHub Actions Access"}]' \
            --digest \
            --header 'Accept: application/vnd.atlas.2023-02-01+json' \
            --header 'Content-Type: application/json' \
            --user "$USERNAME:$PASSWORD" \
            "https://cloud.mongodb.com/api/atlas/v2/groups/$GROUP_ID/accessList"
        env:
          GROUP_ID: ${{ secrets.ATLAS_GROUP_ID }}
          PASSWORD: ${{ secrets.ATLAS_PRIVATE_KEY }}
          USERNAME: ${{ secrets.ATLAS_PUBLIC_KEY }}

      # 5. 의존성 설치 (requirements.txt)
      - name: Install dependencies
        run: |
          cd news_chatbot  # news_chatbot 폴더로 이동
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 6. Python 스크립트 실행 (mongodb.py)
      - name: Run mongodb.py script
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}  # MongoDB Atlas 연결 문자열 환경 변수 설정
        run: |
          cd news_chatbot  # news_chatbot 폴더로 이동
          python mongodb.py

      # 7. MongoDB 화이트리스트에서 러너의 IP 제거
      - name: Revoke the runner's access to MongoDB Atlas
        if: always()
        run: |
          curl \
            --digest \
            --header 'Accept: application/vnd.atlas.2023-02-01+json' \
            --request 'DELETE' \
            --user "$USERNAME:$PASSWORD" \
            "https://cloud.mongodb.com/api/atlas/v2/groups/$GROUP_ID/accessList/${{ steps.get_runner_ip.outputs.ip_address }}"
        env:
          GROUP_ID: ${{ secrets.ATLAS_GROUP_ID }}
          PASSWORD: ${{ secrets.ATLAS_PRIVATE_KEY }}
          USERNAME: ${{ secrets.ATLAS_PUBLIC_KEY }}

